{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport * as Contacts from \"expo-contacts\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PAGES = [{\n  heading: \"Inner Circle\",\n  text: \"Inner Circle is the circle of the closest people to you. You may not talk daily, but they are close to Heart.\"\n}, {\n  heading: \"Close Friends\",\n  text: \"Close Friends are the ones just next after the Inner Circle. You love their company and cherish it.\"\n}, {\n  heading: \"Normal Friends\",\n  text: \"Normal Friends - Those with whom you experience Positivity and want them to be better friends.\"\n}, {\n  heading: \"Inner Circle\",\n  text: \"Inner Circle is the circle of the closest people to you. You may not talk daily, but they are close to Heart.\"\n}];\nexport default function ContactsComponent(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  React.useEffect(function () {\n    (function _callee() {\n      var _await$Contacts$reque, status, _await$Contacts$getCo, _data, cleanedData, segregatedData;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Contacts.requestPermissionsAsync());\n\n            case 2:\n              _await$Contacts$reque = _context.sent;\n              status = _await$Contacts$reque.status;\n\n              if (!(status === \"granted\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Contacts.getContactsAsync({\n                fields: []\n              }));\n\n            case 7:\n              _await$Contacts$getCo = _context.sent;\n              _data = _await$Contacts$getCo.data;\n              if (_data.length < 0) setError(true);\n              cleanedData = _data.map(function (contact) {\n                var _name;\n\n                var name = contact.firstName;\n                if (contact.lastName) name += \" \" + contact.lastName;\n                if ((_name = name) != null && _name.includes(\"10000 characters\")) name = contact.firstName;\n                return {\n                  name: name,\n                  lookupKey: contact.lookupKey\n                };\n              });\n              segregatedData = {};\n              cleanedData.forEach(function (contact) {\n                if (!contact.name) return;\n                if (!segregatedData[contact.name[0].toLowerCase()]) segregatedData[contact.name[0].toLowerCase()] = [];\n                segregatedData[contact.name[0].toLowerCase()].push(contact);\n              });\n              setData(segregatedData);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return _jsxs(Styled.container, {\n    children: [_jsxs(Styled.topBar, {\n      children: [_jsx(Styled.back, {\n        onPress: function onPress() {\n          return setProgress(function (p) {\n            return p - 1;\n          });\n        },\n        children: \"< Back\"\n      }), _jsx(Styled.next, {\n        onPress: function onPress() {\n          return setProgress(function (p) {\n            return p + 1;\n          });\n        },\n        children: \"Next\"\n      })]\n    }), _jsxs(Styled.main, {\n      children: [_jsx(Styled.search, {}), _jsx(Styled.list, {\n        children: Object.keys(data).map(function (letter, i) {\n          return _jsx(Styled.card, {\n            children: _jsx(Styled.cardLetter, {\n              children: letter.toUpperCase()\n            })\n          }, i);\n        })\n      })]\n    })]\n  });\n}\nvar Styled = {\n  container: styled(SafeAreaView)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    background-color: #fff;\\n  \"]))),\n  card: styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    min-height: 60px;\\n    margin: 10px 0;\\n    background: #fff;\\n    border-radius: 12px;\\n  \"]))),\n  cardLetter: styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    font-family: \\\"Lexend_700Bold\\\";\\n    font-style: normal;\\n    font-weight: 700;\\n    font-size: 19px;\\n    color: #2e303a;\\n    padding: 10px;\\n  \"]))),\n  topBar: styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n    height: 60px;\\n    justify-content: center;\\n    justify-content: space-between;\\n    padding: 20px 30px;\\n    flex-direction: row;\\n  \"]))),\n  main: styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n  \"]))),\n  search: styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n    background: #465fde;\\n    border-radius: 24px;\\n    height: 250px;\\n    margin: 20px;\\n  \"]))),\n  list: styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n    margin: 20px;\\n  \"]))),\n  cards: styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    height: 2000px;\\n    background-color: red;\\n  \"]))),\n  next: styled.Text(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\"]))),\n  back: styled.Text(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\"])))\n};","map":{"version":3,"sources":["/home/akhilkala/Desktop/datsme/pages/FM/Contacts.tsx"],"names":["React","styled","Contacts","SafeAreaView","PAGES","heading","text","ContactsComponent","useState","progress","setProgress","error","setError","data","setData","useEffect","requestPermissionsAsync","status","getContactsAsync","fields","length","cleanedData","map","contact","name","firstName","lastName","includes","lookupKey","segregatedData","forEach","toLowerCase","push","p","Object","keys","letter","i","toUpperCase","Styled","container","card","View","cardLetter","Text","topBar","main","search","list","cards","next","back"],"mappings":"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","sourcesContent":["import React, { ReactElement } from \"react\";\nimport styled from \"styled-components/native\";\nimport * as Contacts from \"expo-contacts\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\ninterface Props {}\n\nconst PAGES = [\n  {\n    heading: \"Inner Circle\",\n    text: \"Inner Circle is the circle of the closest people to you. You may not talk daily, but they are close to Heart.\",\n  },\n  {\n    heading: \"Close Friends\",\n    text: \"Close Friends are the ones just next after the Inner Circle. You love their company and cherish it.\",\n  },\n  {\n    heading: \"Normal Friends\",\n    text: \"Normal Friends - Those with whom you experience Positivity and want them to be better friends.\",\n  },\n  {\n    heading: \"Inner Circle\",\n    text: \"Inner Circle is the circle of the closest people to you. You may not talk daily, but they are close to Heart.\",\n  },\n];\n\nexport default function ContactsComponent({}: Props): ReactElement {\n  const [progress, setProgress] = React.useState(0);\n  const [error, setError] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    (async () => {\n      const { status } = await Contacts.requestPermissionsAsync();\n      if (status === \"granted\") {\n        const { data } = await Contacts.getContactsAsync({\n          fields: [],\n        });\n\n        if (data.length < 0) setError(true);\n\n        const cleanedData = data.map((contact) => {\n          let name = contact.firstName;\n          if (contact.lastName) name += ` ${contact.lastName}`;\n          if (name?.includes(\"10000 characters\")) name = contact.firstName;\n          return {\n            name,\n            //@ts-ignore\n            lookupKey: contact.lookupKey,\n          };\n        });\n\n        const segregatedData: any = {};\n        cleanedData.forEach((contact) => {\n          if (!contact.name) return;\n          if (!segregatedData[contact.name[0].toLowerCase()])\n            segregatedData[contact.name[0].toLowerCase()] = [];\n          segregatedData[contact.name[0].toLowerCase()].push(contact);\n        });\n\n        setData(segregatedData);\n      }\n    })();\n  }, []);\n\n  return (\n    <Styled.container>\n      <Styled.topBar>\n        <Styled.back onPress={() => setProgress((p) => p - 1)}>\n          {\"< Back\"}\n        </Styled.back>\n        <Styled.next onPress={() => setProgress((p) => p + 1)}>\n          Next\n        </Styled.next>\n      </Styled.topBar>\n\n      <Styled.main>\n        <Styled.search></Styled.search>\n        <Styled.list>\n          {Object.keys(data).map((letter: string, i) => (\n            <Styled.card key={i}>\n              <Styled.cardLetter>{letter.toUpperCase()}</Styled.cardLetter>\n            </Styled.card>\n          ))}\n        </Styled.list>\n      </Styled.main>\n    </Styled.container>\n  );\n}\n\nconst Styled = {\n  container: styled(SafeAreaView)`\n    background-color: #fff;\n  `,\n  card: styled.View`\n    min-height: 60px;\n    margin: 10px 0;\n    background: #fff;\n    border-radius: 12px;\n  `,\n  cardLetter: styled.Text`\n    font-family: \"Lexend_700Bold\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 19px;\n    color: #2e303a;\n    padding: 10px;\n  `,\n  topBar: styled.View`\n    height: 60px;\n    justify-content: center;\n    justify-content: space-between;\n    padding: 20px 30px;\n    flex-direction: row;\n  `,\n  main: styled.View`\n    flex: 1;\n  `,\n  search: styled.View`\n    background: #465fde;\n    border-radius: 24px;\n    height: 250px;\n    margin: 20px;\n  `,\n  list: styled.View`\n    margin: 20px;\n  `,\n  cards: styled.View`\n    flex: 1;\n    height: 2000px;\n    background-color: red;\n  `,\n  next: styled.Text``,\n  back: styled.Text``,\n};\n"]},"metadata":{},"sourceType":"module"}