{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _templateObject, _templateObject2;\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AddConnection(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      notes = _React$useState2[0],\n      setNotes = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      reminders = _React$useState4[0],\n      setReminders = _React$useState4[1];\n\n  return _jsx(Styled.container, {});\n}\nvar Styled = {\n  container: styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    background-color: red;\\n  \"]))),\n  heading: styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\"])))\n};","map":{"version":3,"sources":["/home/akhilkala/Desktop/datsme/pages/FM/AddConnection.tsx"],"names":["React","styled","AddConnection","useState","notes","setNotes","reminders","setReminders","Styled","container","View","heading","Text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAIA,eAAe,SAASC,aAAT,OAAgD;AAAA;;AAC7D,wBAA0BF,KAAK,CAACG,QAAN,CAAyB,EAAzB,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAAkCL,KAAK,CAACG,QAAN,CAEhC,EAFgC,CAAlC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAIA,SAAO,KAAC,MAAD,CAAQ,SAAR,KAAP;AACD;AAED,IAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAER,MAAM,CAACS,IAAT,wHADI;AAKbC,EAAAA,OAAO,EAAEV,MAAM,CAACW,IAAT;AALM,CAAf","sourcesContent":["import React, { ReactElement } from \"react\";\nimport styled from \"styled-components/native\";\n\ninterface Props {}\n\nexport default function AddConnection({}: Props): ReactElement {\n  const [notes, setNotes] = React.useState<string[]>([]);\n  const [reminders, setReminders] = React.useState<\n    { text: string; date: number }[]\n  >([]);\n\n  return <Styled.container></Styled.container>;\n}\n\nconst Styled = {\n  container: styled.View`\n    flex: 1;\n    background-color: red;\n  `,\n  heading: styled.Text``,\n};\n"]},"metadata":{},"sourceType":"module"}